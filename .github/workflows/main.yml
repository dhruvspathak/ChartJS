name: Checkmarx Container Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  scan-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip

      - name: Get Checkmarx One CLI
        run: |
          wget "https://github.com/Checkmarx/ast-cli/releases/download/2.3.13/ast-cli_2.3.13_linux_x64.tar.gz"
          tar -xvzf ast-cli_2.3.13_linux_x64.tar.gz
          chmod +x cx
          sudo mv cx /usr/local/bin/

      - name: Authenticate with JFrog Artifactory
        run: |
          echo | docker login https://trialwfypfq.jfrog.io/ -u "${{ secrets.JFROG_USERNAME }}" --password "${{ secrets.JFROG_API_KEY }}"

      - name: Pull Private Image from JFrog
        run: |
          docker pull trialwfypfq.jfrog.io/docker-trial/exposures:latest

      - name: Prepare Dummy Directory for Checkmarx CLI
        run: |
          mkdir -p ~/dummy_container_scan

      - name: Scan Image with Checkmarx CLI
        run: |
          cx scan create --project-name "MyApp-Security" \
            -s ~/dummy_container_scan \
            --project-name "${{ github.repository }}" \
            --branch "container-scan-run" \
            --base-uri "https://ind.ast.checkmarx.net" \
            --tenant "sudha" \
            --client-id "${{ secrets.CX_CLIENT_ID }}" \
            --client-secret "${{ secrets.CX_CLIENT_SECRET }}" \
            --scan-types "container-security" \
            --container-images "trialwfypfq.jfrog.io/docker-trial/mysql:8.0/latest" \
            #--report-format json --output scan-results.json \
            #--CX_API_KEY "${{ secrets.CX_API_KEY }}"
            --CX_BASE_URI "https://ind.ast.checkmarx.net"

      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: Checkmarx-Scan-Report
          path: scan-results.json
